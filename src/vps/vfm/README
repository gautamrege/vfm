Build Pre-requisites
====================
Please ensure that the following packages are installed:
sqlite-3.3.6-2
sqlite-devel-3.3.6-2


Build Instructions
==================
1. To build VFM, please use the make command:
# make clean all

2. This will build the 'vfm' binary.


VFM Configuration
=================
The vfm.config.example shows an example of VFM configuration.
You can make the changes accordingly.


Running VFM
===========
Please ensure that the current working directory contains vfm.config
To run the vfm binary, please execute the command:
# ./vfm


What the VFM does till now
==========================

FCoE
----
1. VFM sends a FLOGI request from VFM to the SW GW
2. It is assumed that a bridge is associated. Now, VFM sends a multicast 
   GW advertisement to the SW GW which in turn forwards it to the IO_Module.
3. VFM listens for IO_Module discovery solicitations
4. For every IO_Module solicitation, VFM sends a unicast GW advertisement.
5. VFM then receives a IO_Module FLOGI. It converts this FLOGI to FDISC and
   forwards it to the SW GW.

EoIB
----
1. VFM creates the EoIB advertisement multicast group.
2. VFM sends a multicast EoIB gateway advertisement to this multicast group.
3. It listens for any unicast solicitation from a IO_Module initiator (host).
4. For each that responds (currently tested with one host only), VFM sends a
   unicast EoIB gateway advertisement.
5. This is referred to as the "3-way handshake".


Note regarding external code
============================

To enable testing prior to BridgeX availability, this code includes some
additional code which approximately simulates a subset of BridgeX behavior.
This code is stored in the ext subdirectory.

'ext' code is considered throwaway code.  It includes code borrowed from open
source examples, and is meant for use only in limited test scenarios.
Therefore, all 'ext' code is not subject to code review or the quality
standards of VPS.
