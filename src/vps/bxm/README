Build Pre-requisites
====================
Please ensure that the following packages are installed:
sqlite-3.3.6-2
sqlite-devel-3.3.6-2


Build Instructions
==================
1. To build BXM, please use the make command:
# make clean all

2. This will build the 'bxm' binary.


BXM Configuration
=================
The bxm.config.example shows an example of BXM configuration.
You can make the changes accordingly.


Running BXM
===========
Please ensure that the current working directory contains bxm.config
To run the bxm binary, please execute the command:
# ./bxm


What the BXM does till now
==========================

FCoE
----
1. BXM sends a FLOGI request from BXM to the SW GW
2. It is assumed that a bridge is associated. Now, BXM sends a multicast 
   GW advertisement to the SW GW which in turn forwards it to the ConnectX.
3. BXM listens for ConnectX discovery solicitations
4. For every ConnectX solicitation, BXM sends a unicast GW advertisement.
5. BXM then receives a ConnectX FLOGI. It converts this FLOGI to FDISC and
   forwards it to the SW GW.

EoIB
----
1. BXM creates the EoIB advertisement multicast group.
2. BXM sends a multicast EoIB gateway advertisement to this multicast group.
3. It listens for any unicast solicitation from a ConnectX initiator (host).
4. For each that responds (currently tested with one host only), BXM sends a
   unicast EoIB gateway advertisement.
5. This is referred to as the "3-way handshake".


Note regarding external code
============================

To enable testing prior to BridgeX availability, this code includes some
additional code which approximately simulates a subset of BridgeX behavior.
This code is stored in the ext subdirectory.

'ext' code is considered throwaway code.  It includes code borrowed from open
source examples, and is meant for use only in limited test scenarios.
Therefore, all 'ext' code is not subject to code review or the quality
standards of VPS.
